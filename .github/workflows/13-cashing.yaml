name: 12 - cashing dependencies

# caching allows us ton store files and later retrieeve them based on a key. Workflows can access the cache from their branch or from default branch
# workflow run starts -> Executes cache step -> cache matching key?  -> if yes, restore cache -> run build steps -> save cache
#                                                                                          -> if no, run build steps -> save cache

on:
    workflow_dispatch:
        inputs:
            use-cache:
                type: boolean
                description: 'Set to true to use cache'
                default: true
            node-version:
                description: 'Node.js version to use'
                required: true
                default: '20.x'
                type: choice
                options:
                  - '16'
                  - '18'
                  - '20'
                  - '22'

jobs:
    install-deps:
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: 13-caching/react-app
        outputs:
            deps-cache-key: ${{ steps.cache-key.outputs.CACHE_KEY }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Node.js
              uses: actions/setup-node@v3   
              with:
                node-version: ${{ inputs.node-version }}
            - name: Calculate cache key
              id: cache-key
              run: echo "CACHE_KEY=deps-node-modules-${{ hashFiles('**/package-lock.json') }}" >> "$GITHUB_OUTPUT"
            - name: Download cached dependencies if available
              uses: actions/cache@v3
              if: ${{ inputs.use-cache }}
              id: cache-node-modules
              with:
                path: 13-caching/react-app/node_modules
                key: ${{ steps.cache-key.outputs.CACHE_KEY }}
            - name: install dependencies
              if: ${{ inputs.use-cache && steps.cache-node-modules.outputs.cache-hit != 'true' }}
              run: npm ci

    linting-and-testing:
        runs-on: ubuntu-latest
        needs: install-deps
        defaults:
          run:
            working-directory: 13-caching/react-app
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Node.js
              uses: actions/setup-node@v3   
              with:
                node-version: ${{ inputs.node-version }}
            - name: Download cached dependencies if available
              uses: actions/cache@v3
              if: ${{ inputs.use-cache }}
              id: cache-node-modules
              with:
                path: 13-caching/react-app/node_modules
                key: ${{ needs.install-deps.outputs.deps-cache-key }}
            - name : Run tests
              run: npm run test
            - name: Run Linting
              run: echo "Running linting..."

    build:
        runs-on: ubuntu-latest
        needs: install-deps
        defaults:
          run:
            working-directory: 13-caching/react-app
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Node.js
              uses: actions/setup-node@v3   
              with:
                node-version: ${{ inputs.node-version }}
            - name: Download cached dependencies if available
              uses: actions/cache@v3
              if: ${{ inputs.use-cache }}
              id: cache-node-modules
              with:
                path: 13-caching/react-app/node_modules
                key: ${{ needs.install-deps.outputs.deps-cache-key }}
            - name: Run build
              run: npm run build
            - name: Deploying application
              run: echo "Deploying application..."
            
        